
# 1) Employee Address

SELECT e.employee_id, 
e.job_title,
a.address_id, 
a.address_text
FROM `employees` as e
JOIN `addresses` as a
WHERE a.address_id = e.address_id
ORDER BY a.address_id LIMIT 5;

# 2) Addresses with towns

SELECT e.first_name, e.last_name, t.name, a.address_text
FROM employees as `e`, addresses as `a`
JOIN towns as `t`
WHERE t.town_id = a.town_id AND a.address_id = e.address_id
ORDER BY e.first_name ASC, e.last_name LIMIT 5;

# 3) Sales Employee

SELECT e.employee_id, e.first_name, e.last_name, d.name as 'department_name'
FROM employees AS `e`
JOIN departments AS `d`
ON e.department_id = d.department_id
WHERE d.name = 'Sales'
ORDER BY e.employee_id DESC;

# 4) Employee Departments

SELECT e.employee_id, e.first_name, e.salary, d.name as 'department_name'
FROM employees as `e`
JOIN departments as `d`
WHERE e.department_id = d.department_id AND e.salary > 15000
ORDER BY d.department_id DESC LIMIT 5;

# 5) Employees Without Project

SELECT DISTINCT e.employee_id, e.first_name
FROM employees AS e
LEFT JOIN employees_projects as ep
ON e.employee_id = ep.employee_id
ORDER BY e.employee_id DESC LIMIT 3;


# 6) Employees Hired After

SELECT e.first_name, 
e.last_name, 
e.hire_date,
d.name as 'dept_name'
FROM employees as e
INNER JOIN departments as d
ON e.department_id = d.department_id
WHERE e.hire_date > 1999/01/01 AND d.name = 'Sales' OR  d.name = 'Finance'
ORDER BY e.hire_date ASC;

# 7) Employees with Project

SELECT e.employee_id, e.first_name, p.name as 'project_name'
FROM employees_projects as ep
JOIN projects as p
ON ep.project_id = p.project_id
JOIN employees as e
ON e.employee_id = ep.employee_id
WHERE p.start_date >= 2002-08-13 AND p.end_date IS NULL
ORDER BY e.first_name ASC, p.name ASC LIMIT 5;

# 7) Employees with Project

SELECT e.employee_id, e.first_name, p.name as 'project_name'
FROM employees as e
JOIN employees_projects as ep
ON e.employee_id = ep.employee_id
JOIN projects as p
ON ep.project_id = p.project_id
WHERE p.start_date >= 2002-08-13 AND p.end_date IS NULL
ORDER BY e.first_name ASC, p.name ASC LIMIT 5;

# 8) Employee 24

SELECT e.employee_id, e.first_name, if((year(p.start_date) >= 2005), NULL, p.name) as 'project_name'
FROM employees as e
JOIN employees_projects as ep
ON e.employee_id = ep.employee_id
JOIN projects as p
ON p.project_id = ep.project_id
WHERE e.employee_id = 24
ORDER BY p.name;

# 9) Employee Manager

SELECT e2.employee_id, e2.first_name, e2.manager_id, e.first_name as 'manager_name'
FROM employees as e
JOIN employees as e2
ON e.employee_id = e2.manager_id
WHERE e2.manager_id IN (3,7)
ORDER BY e2.first_name;

# 10) Employee Summary 

SELECT e2.employee_id, 
concat(e2.first_name, ' ', e2.last_name) as 'employee_name',
concat(e.first_name, ' ', e.last_name) as 'manager_name',
d.name as 'department_name'
FROM employees as e2
JOIN employees as e
ON e.employee_id = e2.manager_id
JOIN departments as d
ON d.department_id = e2.department_id
ORDER BY e2.employee_id LIMIT 5;

# 11) Min Average Salary

SELECT avg(e.salary) as min_average_salary
FROM employees as e
GROUP BY e.department_id 
ORDER BY e.salary ASC LIMIT 1;

# 12) Highest Peaks In Bulgaria

SELECT c.country_code, 
m.mountain_range,
p.peak_name,
p.elevation
FROM countries as c
JOIN mountains_countries as mc
ON c.country_code = mc.country_code
JOIN mountains as m
ON m.id = mc.mountain_id
JOIN peaks as p
ON p.mountain_id = m.id
WHERE c.country_code = 'BG' AND p.elevation > 2835
ORDER BY p.elevation DESC;

# 13) Count Mountain Ranges

SELECT country_code, count(country_code) as 'mountain_range'
FROM mountains_countries
WHERE country_code = 'US' or country_code = 'RU' or country_code = 'BG'
GROUP BY country_code
ORDER BY mountain_range DESC;

# 14) Countriest With Rivers


SELECT c.country_name, r.river_name
FROM countries as c
LEFT JOIN countries_rivers as cr
ON c.country_code = cr.country_code
LEFT JOIN rivers as r
ON r.id = cr.river_id
WHERE c.continent_code = 'AF'
ORDER BY c.country_name LIMIT 5;

# 16) Countries without any Mountains

SELECT count(c.country_code)
FROM countries as c
WHERE c.country_code NOT IN 
(SELECT 
mc.country_code
FROM mountains_countries as mc 
);

# 17) Highest Peak and Longest River by Country

SELECT c.country_name, max(p.elevation) as 'highest_peak_elevation', max(r.length) as 'longest_river_length'
FROM countries as c
JOIN mountains_countries as mc
ON c.country_code = mc.country_code
JOIN mountains as m
ON m.id = mc.mountain_id
JOIN peaks as p 
ON p.mountain_id = m.id
JOIN countries_rivers as cr
ON cr.country_code = c.country_code
JOIN rivers as r
ON r.id = cr.river_id 
GROUP BY c.country_name
ORDER BY highest_peak_elevation DESC, longest_river_length DESC, c.country_name LIMIT 5;



